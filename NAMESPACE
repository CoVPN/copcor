export(draw.x.axis.cor, report.assay.values, get.xlim, get.marker.histogram, get.range.cor, add.wt)

export(marker.name.to.assay, make.case.count.marker.availability.table, get.marginalized.risk.no.marker)

export(cove.boost.collapse.strata, add.trichotomized.markers)

export(bootstrap.case.control.samples, get.bootstrap.data.cor, bootstrap.cove.boost.2, bootstrap.cove.boost, bootstrap.cohort, get.ptids.by.stratum.for.bootstrap, cor_coxph_risk_no_marker)

export(marginalized.risk.svycoxph.boot)

export(pcr2, pcr, predictCompetingRisk2, predictCompetingRisk)

export(hotdeckMI, escape)

export(cor_coxph_risk_plotting, cor_coxph_risk_bootstrap, cor_coxph_coef_n, cor_coxph_coef_1, cor_coxph_coef_itxn3)


importFrom(kyotil, '%.%', contain, myprint, last, trim, mypdf,
  cbinduneven, concatList , empty.plot , formatDouble , mylegend,
  mylines , mymatplot , mytex , mywrite.csv, getFixedEf, getFormattedSummary, p.adj.perm )
importFrom(marginalizedRisk, marginalized.risk, marginalized.risk.threshold, 
  marginalized.risk.cont.2, controlled.risk.bias.factor, E.value)
importFrom(survey, svycoxph, twophase)
importFrom(Hmisc, wtd.quantile)
importFrom(assertthat, assert_that)
importFrom(survival, coxph, survfit)
importFrom(here, here)
importFrom(plotrix, weighted.hist)
importFrom(future, availableCores)

import(stats)
import(utils)
import(methods)
import(graphics)
import(grDevices)
import(parallel)




